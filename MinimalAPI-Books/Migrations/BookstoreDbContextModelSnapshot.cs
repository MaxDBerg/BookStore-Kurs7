// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI_Books.Data;

#nullable disable

namespace MinimalAPI_Books.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    partial class BookstoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Agatha Christie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dr. Seuss"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stephen King"
                        },
                        new
                        {
                            Id = 5,
                            Name = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jane Austen"
                        },
                        new
                        {
                            Id = 7,
                            Name = "William Shakespeare"
                        });
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLoanable")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Publication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenres");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Art"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Self-help / Personal"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 14,
                            Name = "History"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Travel"
                        });
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            Name = "French"
                        },
                        new
                        {
                            Id = 4,
                            Name = "German"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Japanese"
                        });
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.HasOne("MinimalAPI_Books.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPI_Books.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Book", b =>
                {
                    b.HasOne("MinimalAPI_Books.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPI_Books.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.BookGenre", b =>
                {
                    b.HasOne("MinimalAPI_Books.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPI_Books.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MinimalAPI_Books.Models.Language", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
